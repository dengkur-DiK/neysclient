{"ast":null,"code":"import { useSyncExternalStore } from './react-deps.js';\n\n/**\n * History API docs @see https://developer.mozilla.org/en-US/docs/Web/API/History\n */\nconst eventPopstate = \"popstate\";\nconst eventPushState = \"pushState\";\nconst eventReplaceState = \"replaceState\";\nconst eventHashchange = \"hashchange\";\nconst events = [eventPopstate, eventPushState, eventReplaceState, eventHashchange];\nconst subscribeToLocationUpdates = callback => {\n  for (const event of events) {\n    addEventListener(event, callback);\n  }\n  return () => {\n    for (const event of events) {\n      removeEventListener(event, callback);\n    }\n  };\n};\nconst useLocationProperty = (fn, ssrFn) => useSyncExternalStore(subscribeToLocationUpdates, fn, ssrFn);\nconst currentSearch = () => location.search;\nconst useSearch = function () {\n  let {\n    ssrSearch = \"\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useLocationProperty(currentSearch, () => ssrSearch);\n};\nconst currentPathname = () => location.pathname;\nconst usePathname = function () {\n  let {\n    ssrPath\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useLocationProperty(currentPathname, ssrPath ? () => ssrPath : currentPathname);\n};\nconst currentHistoryState = () => history.state;\nconst useHistoryState = () => useLocationProperty(currentHistoryState, () => null);\nconst navigate = function (to) {\n  let {\n    replace = false,\n    state = null\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return history[replace ? eventReplaceState : eventPushState](state, \"\", to);\n};\n\n// the 2nd argument of the `useBrowserLocation` return value is a function\n// that allows to perform a navigation.\nconst useBrowserLocation = function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [usePathname(opts), navigate];\n};\nconst patchKey = Symbol.for(\"wouter_v3\");\n\n// While History API does have `popstate` event, the only\n// proper way to listen to changes via `push/replaceState`\n// is to monkey-patch these methods.\n//\n// See https://stackoverflow.com/a/4585031\nif (typeof history !== \"undefined\" && typeof window[patchKey] === \"undefined\") {\n  for (const type of [eventPushState, eventReplaceState]) {\n    const original = history[type];\n    // TODO: we should be using unstable_batchedUpdates to avoid multiple re-renders,\n    // however that will require an additional peer dependency on react-dom.\n    // See: https://github.com/reactwg/react-18/discussions/86#discussioncomment-1567149\n    history[type] = function () {\n      const result = original.apply(this, arguments);\n      const event = new Event(type);\n      event.arguments = arguments;\n      dispatchEvent(event);\n      return result;\n    };\n  }\n\n  // patch history object only once\n  // See: https://github.com/molefrog/wouter/issues/167\n  Object.defineProperty(window, patchKey, {\n    value: true\n  });\n}\nexport { navigate, useBrowserLocation, useHistoryState, useLocationProperty, usePathname, useSearch };","map":{"version":3,"names":["useSyncExternalStore","eventPopstate","eventPushState","eventReplaceState","eventHashchange","events","subscribeToLocationUpdates","callback","event","addEventListener","removeEventListener","useLocationProperty","fn","ssrFn","currentSearch","location","search","useSearch","ssrSearch","arguments","length","undefined","currentPathname","pathname","usePathname","ssrPath","currentHistoryState","history","state","useHistoryState","navigate","to","replace","useBrowserLocation","opts","patchKey","Symbol","for","window","type","original","result","apply","Event","dispatchEvent","Object","defineProperty","value"],"sources":["/workspaces/neysclient/node_modules/wouter/esm/use-browser-location.js"],"sourcesContent":["import { useSyncExternalStore } from './react-deps.js';\n\n/**\n * History API docs @see https://developer.mozilla.org/en-US/docs/Web/API/History\n */\nconst eventPopstate = \"popstate\";\nconst eventPushState = \"pushState\";\nconst eventReplaceState = \"replaceState\";\nconst eventHashchange = \"hashchange\";\nconst events = [\n  eventPopstate,\n  eventPushState,\n  eventReplaceState,\n  eventHashchange,\n];\n\nconst subscribeToLocationUpdates = (callback) => {\n  for (const event of events) {\n    addEventListener(event, callback);\n  }\n  return () => {\n    for (const event of events) {\n      removeEventListener(event, callback);\n    }\n  };\n};\n\nconst useLocationProperty = (fn, ssrFn) =>\n  useSyncExternalStore(subscribeToLocationUpdates, fn, ssrFn);\n\nconst currentSearch = () => location.search;\n\nconst useSearch = ({ ssrSearch = \"\" } = {}) =>\n  useLocationProperty(currentSearch, () => ssrSearch);\n\nconst currentPathname = () => location.pathname;\n\nconst usePathname = ({ ssrPath } = {}) =>\n  useLocationProperty(\n    currentPathname,\n    ssrPath ? () => ssrPath : currentPathname\n  );\n\nconst currentHistoryState = () => history.state;\nconst useHistoryState = () =>\n  useLocationProperty(currentHistoryState, () => null);\n\nconst navigate = (to, { replace = false, state = null } = {}) =>\n  history[replace ? eventReplaceState : eventPushState](state, \"\", to);\n\n// the 2nd argument of the `useBrowserLocation` return value is a function\n// that allows to perform a navigation.\nconst useBrowserLocation = (opts = {}) => [usePathname(opts), navigate];\n\nconst patchKey = Symbol.for(\"wouter_v3\");\n\n// While History API does have `popstate` event, the only\n// proper way to listen to changes via `push/replaceState`\n// is to monkey-patch these methods.\n//\n// See https://stackoverflow.com/a/4585031\nif (typeof history !== \"undefined\" && typeof window[patchKey] === \"undefined\") {\n  for (const type of [eventPushState, eventReplaceState]) {\n    const original = history[type];\n    // TODO: we should be using unstable_batchedUpdates to avoid multiple re-renders,\n    // however that will require an additional peer dependency on react-dom.\n    // See: https://github.com/reactwg/react-18/discussions/86#discussioncomment-1567149\n    history[type] = function () {\n      const result = original.apply(this, arguments);\n      const event = new Event(type);\n      event.arguments = arguments;\n\n      dispatchEvent(event);\n      return result;\n    };\n  }\n\n  // patch history object only once\n  // See: https://github.com/molefrog/wouter/issues/167\n  Object.defineProperty(window, patchKey, { value: true });\n}\n\nexport { navigate, useBrowserLocation, useHistoryState, useLocationProperty, usePathname, useSearch };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}