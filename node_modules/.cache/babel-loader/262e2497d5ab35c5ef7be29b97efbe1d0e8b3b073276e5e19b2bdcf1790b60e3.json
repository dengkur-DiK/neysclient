{"ast":null,"code":"/**\n * @param {string|RegExp} input The route pattern\n * @param {boolean} [loose] Allow open-ended matching. Ignored with `RegExp` input.\n */\nexport function parse(input, loose) {\n  if (input instanceof RegExp) return {\n    keys: false,\n    pattern: input\n  };\n  var c,\n    o,\n    tmp,\n    ext,\n    keys = [],\n    pattern = '',\n    arr = input.split('/');\n  arr[0] || arr.shift();\n  while (tmp = arr.shift()) {\n    c = tmp[0];\n    if (c === '*') {\n      keys.push(c);\n      pattern += tmp[1] === '?' ? '(?:/(.*))?' : '/(.*)';\n    } else if (c === ':') {\n      o = tmp.indexOf('?', 1);\n      ext = tmp.indexOf('.', 1);\n      keys.push(tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length));\n      pattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n      if (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n    } else {\n      pattern += '/' + tmp;\n    }\n  }\n  return {\n    keys: keys,\n    pattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n  };\n}\nvar RGX = /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n  return route.replace(RGX, (x, lead, key, optional) => {\n    x = values[key == '*' ? key : key.substring(1)];\n    return x ? '/' + x : optional || key == '*' ? '' : '/' + key;\n  });\n}","map":{"version":3,"names":["parse","input","loose","RegExp","keys","pattern","c","o","tmp","ext","arr","split","shift","push","indexOf","substring","length","RGX","inject","route","values","replace","x","lead","key","optional"],"sources":["/workspaces/neysclient/node_modules/regexparam/dist/index.mjs"],"sourcesContent":["/**\n * @param {string|RegExp} input The route pattern\n * @param {boolean} [loose] Allow open-ended matching. Ignored with `RegExp` input.\n */\nexport function parse(input, loose) {\n\tif (input instanceof RegExp) return { keys:false, pattern:input };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = input.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push(c);\n\t\t\tpattern += tmp[1] === '?' ? '(?:/(.*))?' : '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? key : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,KAAKA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACnC,IAAID,KAAK,YAAYE,MAAM,EAAE,OAAO;IAAEC,IAAI,EAAC,KAAK;IAAEC,OAAO,EAACJ;EAAM,CAAC;EACjE,IAAIK,CAAC;IAAEC,CAAC;IAAEC,GAAG;IAAEC,GAAG;IAAEL,IAAI,GAAC,EAAE;IAAEC,OAAO,GAAC,EAAE;IAAEK,GAAG,GAAGT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC;EAC/DD,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAACE,KAAK,CAAC,CAAC;EAErB,OAAOJ,GAAG,GAAGE,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE;IACzBN,CAAC,GAAGE,GAAG,CAAC,CAAC,CAAC;IACV,IAAIF,CAAC,KAAK,GAAG,EAAE;MACdF,IAAI,CAACS,IAAI,CAACP,CAAC,CAAC;MACZD,OAAO,IAAIG,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,YAAY,GAAG,OAAO;IACnD,CAAC,MAAM,IAAIF,CAAC,KAAK,GAAG,EAAE;MACrBC,CAAC,GAAGC,GAAG,CAACM,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;MACvBL,GAAG,GAAGD,GAAG,CAACM,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;MACzBV,IAAI,CAACS,IAAI,CAAEL,GAAG,CAACO,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACR,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC,CAACE,GAAG,GAAGA,GAAG,GAAGD,GAAG,CAACQ,MAAM,CAAE,CAAC;MACnEX,OAAO,IAAI,CAAC,CAAC,CAACE,CAAC,IAAI,CAAC,CAACE,GAAG,GAAG,gBAAgB,GAAG,WAAW;MACzD,IAAI,CAAC,CAAC,CAACA,GAAG,EAAEJ,OAAO,IAAI,CAAC,CAAC,CAAC,CAACE,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,GAAGC,GAAG,CAACO,SAAS,CAACN,GAAG,CAAC;IACrE,CAAC,MAAM;MACNJ,OAAO,IAAI,GAAG,GAAGG,GAAG;IACrB;EACD;EAEA,OAAO;IACNJ,IAAI,EAAEA,IAAI;IACVC,OAAO,EAAE,IAAIF,MAAM,CAAC,GAAG,GAAGE,OAAO,IAAIH,KAAK,GAAG,UAAU,GAAG,MAAM,CAAC,EAAE,GAAG;EACvE,CAAC;AACF;AAEA,IAAIe,GAAG,GAAG,oCAAoC;;AAE9C;AACA,OAAO,SAASC,MAAMA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACrC,OAAOD,KAAK,CAACE,OAAO,CAACJ,GAAG,EAAE,CAACK,CAAC,EAAEC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,KAAK;IACrDH,CAAC,GAAGF,MAAM,CAACI,GAAG,IAAE,GAAG,GAAGA,GAAG,GAAGA,GAAG,CAACT,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7C,OAAOO,CAAC,GAAG,GAAG,GAACA,CAAC,GAAIG,QAAQ,IAAID,GAAG,IAAE,GAAG,GAAI,EAAE,GAAG,GAAG,GAAGA,GAAG;EAC3D,CAAC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}